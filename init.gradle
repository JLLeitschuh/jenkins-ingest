initscript {

    def isTopLevelBuild = gradle.getParent() == null
    if (isTopLevelBuild) {
        def majorGradleVersion
        try {
            majorGradleVersion = Integer.parseInt(gradleVersion.split("\\.")[0])
        } catch (any) {
            majorGradleVersion = 0
        }

        if (majorGradleVersion >= 5) {
            repositories {
                gradlePluginPortal()
            }
        } else if (majorGradleVersion >= 2) {
            repositories {
                maven { url "https://plugins.gradle.org/m2" }
            }
        }
    }
    dependencies {
        classpath("io.moderne:moderne-gradle-plugin:latest.release")
    }
}

/**
    Any changes to this file must also be copied into Jenkins here:

    https://github.com/moderneinc/jenkins-ingest/blob/main/init.gradle
 */ 

// Enable build cache
// Only available for Gradle 3.5+, so invoked defensively
startParameter.metaClass.getMetaProperty("buildCacheEnabled")?.setProperty(startParameter, true)

def majorGradleVersion
try {
    majorGradleVersion = Integer.parseInt(gradleVersion.split("\\.")[0])
} catch (any) {
    majorGradleVersion = 0
}

allprojects {
    project.afterEvaluate {
        if (!project.plugins.hasPlugin(io.moderne.gradle.ModernePlugin)) {
            project.plugins.apply(io.moderne.gradle.ModernePlugin)

         	if (!project.plugins.hasPlugin('maven-publish')) {
          		project.plugins.apply('maven-publish')
         	}

          
            project.publishing {
                publishing {
                    publications {
                        create("moderne", MavenPublication.class) {
                            artifact(tasks.named("moderneJar"))
                        }
                    }
                }
                repositories {
                    maven {
                        url = 'https://artifactory.moderne.ninja/artifactory/moderne-public-ast/'
                        allowInsecureProtocol(true)
                        credentials {
                            username = System.getenv("ARTIFACTORY_USER")
                            password = System.getenv("ARTIFACTORY_PASSWORD")
                        }
                    }
                }
            }
        }
    }
}